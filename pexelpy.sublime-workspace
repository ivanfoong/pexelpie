{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"phot",
				"photo_result\tstatement"
			],
			[
				"video",
				"video_files\tstatement"
			],
			[
				"vido",
				"video_files\tstatement"
			],
			[
				"vid",
				"video_files\tstatement"
			],
			[
				"vide",
				"video_result\tstatement"
			],
			[
				"head",
				"headers"
			],
			[
				"re",
				"response"
			],
			[
				"sear",
				"search"
			],
			[
				"sea",
				"search_type\tstatement"
			],
			[
				"Pe",
				"PexelClient\tclass"
			],
			[
				"se",
				"search_type\tstatement"
			],
			[
				"du",
				"dumps\tfunction"
			],
			[
				"_",
				"_session"
			],
			[
				"Pex",
				"PexelClientException\tclass"
			],
			[
				"DE",
				"DEFAULT_VIDEO_URL\tstatement"
			],
			[
				"pyramid",
				"pyramid_beaker"
			],
			[
				"env",
				"event_loop"
			],
			[
				"async",
				"async_timeout\tmodule"
			],
			[
				"update",
				"update_something_else\tfunction"
			],
			[
				"team",
				"team_name\tstatement"
			],
			[
				"tea",
				"team_name"
			],
			[
				"Pinn",
				"PinnacleMarket"
			],
			[
				"VpGam",
				"VpGameResponse\tclass"
			],
			[
				"Ma",
				"MakerError\tclass"
			],
			[
				"firs",
				"first_match"
			],
			[
				"first",
				"first_match\tstatement"
			],
			[
				"is",
				"assertIsInstance\tfunction"
			],
			[
				"fir",
				"first_match\tstatement"
			],
			[
				"spor",
				"sports_json\tstatement"
			],
			[
				"uni",
				"unittest\tmodule"
			],
			[
				"ass",
				"assertEquals\tstatement"
			],
			[
				"VpGame",
				"VpGameMarket\tclass"
			],
			[
				"match",
				"match_data\tstatement"
			],
			[
				"stat",
				"staticmethod"
			],
			[
				"img_ta",
				"img_tags"
			],
			[
				"min",
				"min_similarity"
			],
			[
				"conf",
				"config_file\tparam"
			],
			[
				"AE",
				"AERenderer\tclass"
			],
			[
				"impo",
				"ImportError\tclass"
			],
			[
				"view_",
				"view_defaults"
			],
			[
				"un",
				"unittest\tmodule"
			],
			[
				"bid_",
				"bid_index"
			],
			[
				"last",
				"last_update"
			],
			[
				"inter",
				"interface\tstatement"
			],
			[
				"ask",
				"ask_index\tstatement"
			],
			[
				"up",
				"update"
			],
			[
				"order",
				"order_book"
			],
			[
				"from",
				"from_snapshot"
			],
			[
				"last_",
				"last_bid_update\tstatement"
			],
			[
				"bid",
				"bid_index\tstatement"
			],
			[
				"book",
				"book_display"
			],
			[
				"colu",
				"column"
			],
			[
				"snap",
				"snapshot\tstatement"
			],
			[
				"chan",
				"channel_id\tstatement"
			],
			[
				"Bit",
				"BitFinBook\tclass"
			],
			[
				"upda",
				"update_count\tstatement"
			],
			[
				"_upd",
				"_update_asks\tfunction"
			],
			[
				"_update",
				"_update_bids\tfunction"
			],
			[
				"price",
				"price_search\tstatement"
			],
			[
				"ch",
				"channel_id\tstatement"
			],
			[
				"ste",
				"start_new_thread\tfunction"
			],
			[
				"server",
				"server_messages"
			],
			[
				"serv",
				"server_messages"
			],
			[
				"sev",
				"server_messages"
			],
			[
				"man",
				"manage_connect"
			],
			[
				"Conne",
				"ConnectionStatus"
			],
			[
				"connect",
				"connection_status"
			],
			[
				"text",
				"textvariable"
			],
			[
				"conn",
				"connection_label"
			],
			[
				"string",
				"StringVar\tclass"
			],
			[
				"char",
				"chars_to_remove"
			],
			[
				"ima",
				"IMAGE_DOWNLOADS"
			],
			[
				"sorte",
				"sorted_urls"
			],
			[
				"down",
				"download_images"
			],
			[
				"dupli",
				"duplicate_index"
			],
			[
				"dupl",
				"duplicates_index"
			],
			[
				"pexe",
				"PexelSearch"
			],
			[
				"ffm",
				"ffmplay_path\tstatement"
			],
			[
				"call",
				"check_call\tfunction"
			],
			[
				"rand",
				"randint"
			],
			[
				"file",
				"file_list\tstatement"
			],
			[
				"prod",
				"producer\tmodule"
			],
			[
				"ffmpeg",
				"ffmpeg_path\tstatement"
			],
			[
				"tem",
				"temp_text_path\tstatement"
			],
			[
				"temp",
				"temp_text_path"
			],
			[
				"capt",
				"captions\tforstmt"
			],
			[
				"filter",
				"filter_more_complex\tstatement"
			],
			[
				"filt",
				"filter_more_complex\tstatement"
			],
			[
				"ffmpeg_",
				"ffmpeg_path\tstatement"
			],
			[
				"std",
				"stdin\tparam"
			],
			[
				"P",
				"Popen\tclass"
			],
			[
				"sub",
				"subprocess"
			],
			[
				"files",
				"filenames\tstatement"
			],
			[
				"obje",
				"object_list\tstatement"
			],
			[
				"set",
				"set_title\tfunction"
			],
			[
				"ae",
				"ae_producer\tmodule"
			],
			[
				"mode",
				"model_filename"
			],
			[
				"sen",
				"sent_length\tstatement"
			],
			[
				"line",
				"line_builder\tfunction"
			],
			[
				"new",
				"new_new_wl\tstatement"
			],
			[
				"comp",
				"comp_str\tstatement"
			],
			[
				"obj",
				"obj_list\tstatement"
			],
			[
				"out",
				"out_str\tstatement"
			],
			[
				"sce",
				"scene_no"
			],
			[
				"lin",
				"line_length"
			],
			[
				"cap",
				"caption_to_lines\tfunction"
			],
			[
				"image",
				"image_path"
			],
			[
				"wor",
				"word_tokenize\timport"
			],
			[
				"to",
				"to_ret\tstatement"
			],
			[
				"new_",
				"new_word_list\tparam"
			],
			[
				"fi",
				"filepath\tparam"
			],
			[
				"slide",
				"slides\tstatement"
			],
			[
				"json",
				"json_str\tstatement"
			],
			[
				"js",
				"json_str"
			],
			[
				"wo",
				"word_tokenize\timport"
			],
			[
				"Im",
				"Image"
			],
			[
				"img",
				"img_overlay\tstatement"
			],
			[
				"read",
				"read\tfunction"
			],
			[
				"pars",
				"parse_args\tfunction"
			],
			[
				"sur",
				"surf_color\tstatement"
			],
			[
				"key_",
				"key_up\tstatement"
			],
			[
				"test",
				"test_captions\tstatement"
			],
			[
				"prd",
				"prod\tstatement"
			],
			[
				"tes",
				"test_filenames\tstatement"
			],
			[
				"sorted",
				"sorted_filenames\tstatement"
			],
			[
				"Pexe",
				"PexelSearch\tclass"
			],
			[
				"key",
				"keywords\tstatement"
			],
			[
				"max",
				"max_image"
			]
		]
	},
	"buffers":
	[
		{
			"file": "setup.py",
			"settings":
			{
				"buffer_size": 407,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "pexelpy/client.py",
			"settings":
			{
				"buffer_size": 2116,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "pexelpy/models.py",
			"settings":
			{
				"buffer_size": 2685,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "pexelpy/__init__.py",
			"settings":
			{
				"buffer_size": 31,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"rep",
				"Package Control: Remove Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"ana",
				"Virtualenv: Activate"
			],
			[
				"vir",
				"Virtualenv: Remove"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"rem",
				"Package Control: Remove Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			]
		],
		"width": 485.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"tk.Frame.update",
			"tk.Frame.update??",
			"__name__",
			"ls",
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/petenilson/projects/pexelpy/requirements.txt",
		"/Users/petenilson/projects/ba47/web_app_django/simple-django-login/speedboat/templates/includes/footer.htm",
		"/Users/petenilson/projects/ba47/web_app_django/simple-django-login/speedboat/authentication/templates/authentication/signin.html",
		"/Users/petenilson/projects/ba47/web_app_django/simple-django-login/templates/home.html",
		"/Users/petenilson/projects/ba47/web_app_django/simple-django-login/templates/base.html",
		"/Users/petenilson/projects/ba47/web_app_django/simple-django-login/speedboat/templates/includes/messages.html",
		"/Users/petenilson/projects/ba47/web_app_django/simple-django-login/templates/login.html",
		"/Users/petenilson/projects/ba47/web_app_django/simple-django-login/speedboat/authentication/templates/authentication/login.html",
		"/Users/petenilson/projects/ba47/web_app_django/simple-django-login/speedboat/authentication/__init__.py",
		"/Users/petenilson/projects/newspaper/setup.py",
		"/Users/petenilson/projects/easyd/easyd/item_scrape.py",
		"/Users/petenilson/coding/learning/pyramid/sessions/tutorial/home.pt",
		"/Users/petenilson/coding/learning/pyramid/sessions/tutorial/hello.pt",
		"/Users/petenilson/coding/learning/pyramid/logging/tutorial/views.py",
		"/Users/petenilson/projects/easyd/easyd/__int__.py",
		"/Users/petenilson/projects/ba47/test.py",
		"/Users/petenilson/projects/speedboat/demo.py",
		"/Users/petenilson/coding/learning/pyramid/json/tutorial/tests.py",
		"/Users/petenilson/coding/learning/pyramid/json/tutorial/views.py",
		"/Users/petenilson/coding/learning/pyramid/json/tutorial/__init__.py",
		"/Users/petenilson/coding/learning/pyramid/static_assets/tutorial/home.pt",
		"/Users/petenilson/coding/learning/pyramid/static_assets/tutorial/__init__.py",
		"/Users/petenilson/coding/learning/pyramid/jinja2/tutorial/home.jinja2",
		"/Users/petenilson/coding/learning/pyramid/jinja2/tutorial/views.py",
		"/Users/petenilson/coding/learning/pyramid/jinja2/tutorial/__init__.py",
		"/Users/petenilson/coding/learning/pyramid/routing/tutorial/tests.py",
		"/Users/petenilson/coding/learning/pyramid/routing/tutorial/home.pt",
		"/Users/petenilson/coding/learning/pyramid/routing/tutorial/views.py",
		"/Users/petenilson/coding/learning/pyramid/routing/tutorial/__init__.py",
		"/Users/petenilson/coding/learning/pyramid/request_response/tutorial/tests.py",
		"/Users/petenilson/coding/learning/pyramid/request_response/tutorial/views.py",
		"/Users/petenilson/coding/learning/pyramid/request_response/tutorial/__init__.py",
		"/Users/petenilson/coding/learning/pyramid/view_classes/tutorial/tests.py",
		"/Users/petenilson/coding/learning/pyramid/view_classes/tutorial/views.py",
		"/Users/petenilson/coding/learning/pyramid/templating/tutorial/__init__.py",
		"/Users/petenilson/coding/learning/pyramid/templating/tutorial/views.py",
		"/Users/petenilson/coding/learning/pyramid/templating/tutorial/tests.py",
		"/Users/petenilson/coding/learning/pyramid/functional_testing/tutorial/__init__.py",
		"/Users/petenilson/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
		"/Users/petenilson/projects/dota2arb/src/item_scrape.py",
		"/Users/petenilson/coding/learning/cefpython/cefpython/examples/hello_world.py",
		"/Users/petenilson/coding/learning/pyramid/ini/setup.py",
		"/Users/petenilson/coding/learning/pyramid/ini/tutorial/__init__.py",
		"/Users/petenilson/coding/learning/pyramid/ini/tutorial/app.py",
		"/Users/petenilson/coding/learning/pyramid/cc_starter/development.ini",
		"/Users/petenilson/coding/learning/pyramid/package/__init__.py",
		"/Users/petenilson/coding/learning/pyramid/package/setup.py",
		"/Users/petenilson/coding/learning/pyramid/package/tutorial/app.py",
		"/Users/petenilson/Coding/BA47/utils/pexel_image_scrape.py",
		"/Users/petenilson/Coding/BA47/temp/js_model.js",
		"/Users/petenilson/Coding/BA47/utils/coritcal_tools.py",
		"/Users/petenilson/Coding/BA47/ffmpeg_producer.py",
		"/Users/petenilson/Coding/BA47/ba47_demo.py",
		"/Users/petenilson/Coding/BA47/ae_producer.py",
		"/Users/petenilson/Coding/BA47/py_models/ae_model.py",
		"/Users/petenilson/Coding/BA47/try_pan_zoom.py",
		"/Users/petenilson/Coding/BA47/py_models/alchemy_response.py",
		"/Users/petenilson/Coding/BA47/models.py",
		"/Users/petenilson/Coding/learning/websockets/test_websockets/test.py",
		"/Users/petenilson/Coding/BA47/body_text.pickle",
		"/Users/petenilson/Coding/BA47/constants.py",
		"/Users/petenilson/Coding/BA47/producer.py",
		"/Users/petenilson/Coding/BA47/BA47.sublime-project",
		"/Users/petenilson/Coding/BA47/ffmpeg_filter.txt",
		"/Users/petenilson/Coding/BA47/media/slide_test/sample_text.txt",
		"/Users/petenilson/Coding/SpeedBoat/ba47.sublime-project",
		"/Users/petenilson/Coding/gameify/stream setup.txt",
		"/Users/petenilson/Coding/BA47/layouts.py",
		"/Users/petenilson/Coding/BA47/utils/caption_maker.py",
		"/Users/petenilson/Coding/SpeedBoat/image_magick_test.py",
		"/Users/petenilson/Coding/BA47/py_models/test_pain.py",
		"/Users/petenilson/Coding/BA47/py_models/__init__.py",
		"/Users/petenilson/Coding/learning/arg_parser.py",
		"/Users/petenilson/Coding/thomas poker/main_interface_win.py",
		"/Users/petenilson/Coding/SpeedBoat/test_captions.py",
		"/Users/petenilson/Coding/gameify/meep/meep/urls.py",
		"/Users/petenilson/Coding/gameify/pygame-primer/test.py",
		"/Users/petenilson/Coding/gameify/__init__.py",
		"/Users/petenilson/Coding/gameify/gameify.sublime-project",
		"/Users/petenilson/Coding/easyd/easyadmin/test_task.py",
		"/Users/petenilson/Coding/SpeedBoat/test_producer.py",
		"/Users/petenilson/Coding/BA47/__init__.py",
		"/Users/petenilson/Coding/BA47/tests/__init__.py",
		"/Users/petenilson/Coding/easyd/easyadmin/tests.py",
		"/Users/petenilson/Coding/SpeedBoat/venv/lib/python2.7/site-packages/retinasdk/full_client.py",
		"/Users/petenilson/Library/Application Support/Sublime Text 3/Packages/Anaconda/Anaconda.sublime-settings",
		"/Users/petenilson/Coding/SpeedBoat/src/models.py",
		"/Users/petenilson/Coding/SpeedBoat/retina_sdk_test.py",
		"/Users/petenilson/Coding/SpeedBoat/alchemy_example_resp.txt",
		"/Users/petenilson/Coding/SpeedBoat/semantic_folding_tests/test_a.txt",
		"/Users/petenilson/Coding/BA47/utils/__init__.py",
		"/Users/petenilson/Coding/SpeedBoat/venv/lib/python2.7/site-packages/nltk/tokenize/punkt.py",
		"/Users/petenilson/Coding/SpeedBoat/semantic_folding_tests/test_c.txt",
		"/Users/petenilson/Coding/SpeedBoat/venv/lib/python2.7/site-packages/retinasdk/client/compare_api.py",
		"/Users/petenilson/Coding/SpeedBoat/algo.txt",
		"/Users/petenilson/Coding/SpeedBoat/speedboat/.anaconda",
		"/Users/petenilson/Coding/SpeedBoat/src/credentials.py",
		"/Users/petenilson/Coding/SpeedBoat/produce.py",
		"/Users/petenilson/Coding/SpeedBoat/src/__init__.py",
		"/Users/petenilson/Coding/easyd/easyadmin/api/test_vpgame_api.py",
		"/Users/petenilson/Coding/easyd/easyadmin/my_tests/mock_vars.py",
		"/Users/petenilson/Coding/easyd/easyadmin/my_tests/mock_responses.py",
		"/Users/petenilson/Coding/AIHack/inthemood/src/test_audio_ingest.py",
		"/Users/petenilson/Coding/vidisum/test_captions.py",
		"/Users/petenilson/Coding/vidisum/produce.py",
		"/Users/petenilson/Coding/vidisum/image_magick_test.py",
		"/Users/petenilson/Coding/vidisum/ffmpeg_test.py",
		"/Users/petenilson/Coding/AIHack/inthemood/src/test_theano_gpu.py",
		"/Users/petenilson/Coding/vidisum/test_speed.py",
		"/Users/petenilson/anaconda/lib/python2.7/site-packages/wand/image.py",
		"/Users/petenilson/Coding/AIHack/test_api.py",
		"/Users/petenilson/Coding/AIHack/inthemood/src/heuro_api.py",
		"/Users/petenilson/Coding/AIHack/inthemood/src/detect_mood.py",
		"/Users/petenilson/Coding/AIHack/inthemood/src/test_webcam.py",
		"/Users/petenilson/Coding/AIHack/inthemood/src/vgg-16_keras.py",
		"/users/petenilson/anaconda/lib/python2.7/site-packages/watson_developer_cloud/watson_developer_cloud_service.py",
		"/Users/petenilson/Coding/AIHack/inthemood/src/credentials.py",
		"/Users/petenilson/Coding/AIHack/inthemood/src/test_socket.py",
		"/users/petenilson/anaconda/lib/python2.7/site-packages/requests/packages/urllib3/response.py",
		"/Users/petenilson/Coding/easyd/easyadmin/api/Pinnacle.py",
		"/Users/petenilson/Coding/AIHack/inthemood/credentials.py",
		"/Users/petenilson/anaconda/lib/python2.7/site-packages/wand/drawing.py",
		"/Users/petenilson/Coding/ibmhack/NewsNAO/produce.py",
		"/Users/petenilson/Coding/ibmhack/NewsNAO/test.png",
		"/Users/petenilson/Coding/ibmhack/ibmhack.sublime-project",
		"/Users/petenilson/Coding/ibmhack/NewsNAO/video.avi",
		"/Users/petenilson/Coding/ibmhack/NewsNAO/test copy.png",
		"/Users/petenilson/Coding/ibmhack/NewsNAO/textToImage.py"
	],
	"find":
	{
		"height": 26.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"login",
			"ope",
			"match_data",
			"remove_nodes_re",
			"off-screen",
			"has-caption",
			"full-width",
			"has_caption",
			"meta_data",
			"get_relevant_sentences",
			"get_keywords",
			"print",
			"myCusto",
			"myCustomLis",
			"myCustomListBox",
			"Custom\nCustom",
			"Custom",
			"CustomList",
			"_removed",
			"threading.Thread",
			"Producer",
			"Image",
			".temp_caption",
			"_zipped",
			"AEModel",
			"add_slice",
			"add_scene",
			"adsa",
			"testing",
			"test",
			"deads",
			"dsfsdfd",
			"test",
			"heresds",
			"test",
			"dsfsdfd",
			"test",
			"dsfsdfd",
			"heresds",
			"dsfsdfd",
			"test",
			"print type(",
			"get_text",
			"FontMetrics",
			"dst",
			"print",
			"fontfullpath",
			"fullpath",
			"fontfullpath",
			"inter",
			"auto_comp",
			"\"",
			"S",
			"W",
			"E",
			"N+E+S+W",
			"HORIZONTAL",
			"CENTER",
			"RangeViewer",
			"2012-09-11_15_16_58.jpg",
			"2012-09-11",
			"2012-09-11_15_16_58.jpg",
			"Frame",
			"frame",
			"evaluate_result",
			"print",
			"self.players",
			"eloPost",
			"eloChange",
			"eloPre",
			"write_to_csv",
			"OUTPUT_NAME",
			"command",
			"dropdown",
			"text",
			"200",
			"height",
			"winfo",
			"\"",
			"font",
			"hero",
			"combostyle",
			"root",
			"style",
			"bind",
			"authen",
			"job_builder",
			"jobBuilder",
			"swop",
			"swap",
			"self.newVPinfo",
			"b_team_id",
			"self.vpOddsB",
			"self.vpOddsA",
			"highestOddsPair",
			"vista",
			"selectedEvent",
			"selectedEventId",
			"eventId",
			"tkess",
			"info",
			"period0",
			"leagueList",
			"uuid",
			"tkk",
			"self.tab1",
			"ttk.",
			"ttk",
			"tkk",
			"tk",
			"tkk",
			"tk",
			"tkk",
			"print",
			"handNumber",
			"converted",
			"new_item"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "setup.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 407,
						"regions":
						{
						},
						"selection":
						[
							[
								85,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "pexelpy/client.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2116,
						"regions":
						{
						},
						"selection":
						[
							[
								359,
								359
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "pexelpy/models.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2685,
						"regions":
						{
						},
						"selection":
						[
							[
								620,
								620
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 948.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "pexelpy/__init__.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 31,
						"regions":
						{
						},
						"selection":
						[
							[
								31,
								31
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.anaconda_documentation":
	{
		"height": 190.0
	},
	"output.exec":
	{
		"height": 243.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/Anaconda.sublime-build",
	"project": "pexelpy.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Desktop/Coding/surf model/project.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 159.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
